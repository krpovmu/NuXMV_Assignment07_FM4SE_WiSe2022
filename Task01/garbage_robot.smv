-- This is the model of a garbage robot
-- It's a garbage can that can be called from different sites
-- have a lid that opens to collect garbage

MODULE room
	VAR
        -- on: if the button was pressed to call the robot
        -- blinking: if the robot arrive to the room and is working
        -- off: otherwise I mean if nobody has called the robot
		room_button: {on, blinking, off};
		robot_button: boolean;
	ASSIGN
		init(room_button) := off;
		init(robot_button) := FALSE;

MODULE garbage_robot(on_robot,off_robot)
	VAR
		location: {atRoom01, between1_2, atRoom02};
		moving: boolean;
		direction: {forward, backward};
	ASSIGN
		init(location) := atRoom01;
		init(moving) := FALSE;

	next(moving) :=
		case
			!(on_robot) : FALSE;
			(on_robot)&(location=between1_2)&(direction=forward) : FALSE;
			(on_robot)&(location=between1_2)&(direction=backward) : FALSE;
			(on_robot)&(location=atRoom01) : FALSE;
			(on_robot)&(location=atRoom02) : FALSE;
			TRUE : TRUE;
		esac;

	next(off_robot) :=
		case
			(moving)&(location=between1_2)&(direction=forward): on;
			(moving) : blinking;
			TRUE : off_robot;
		esac;

	next(on_robot) :=
		case
			(location=atRoom01)&(on_robot) : FALSE;
			TRUE : on_robot;
		esac;

MODULE main

VAR
	room1: room;
	robot: garbage_robot(room1.robot_button,room1.room_button);


-- =========== Requirements
-- 1
LTLSPEC G((room1.robot_button)->F(robot.location = atRoom01));



-- 3
LTLSPEC F(!(room1.robot_button)->(H(robot.moving)->O(room1.room_button=blinking)));
